$background-body: #F1F1F1;
//$cor-links: #5C616C;
$cor-links: #333;
$cor-links-hover: #EFF0F2;
$cor-links-padrao: #08CC75;

$cor-panel: #F5F6F7;

$cor1-gradient: #08CC75; 
$cor2-gradient: #4DBA7A;

$cor-cinza: #F1F1F1;
$cor-do-semantic: #DEDEDE;

$background-alternativo: #FFF;

$cor-br: #DCDDDE;

@mixin padding-top-bottom($medida) {
    padding-top: $medida;
    padding-bottom: $medida;
}

@mixin padding-right-left($medida) {
    padding-right: $medida;
    padding-left: $medida;
}

@mixin image-replace($imageURL) {
    background: url($imageURL) no-repeat;
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

/// Mixin to prefix several properties at once
/// @author Hugo Giraudel
/// @param {Map} $declarations - Declarations to prefix
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($declarations) {
    $prefixes: webkit moz;

    @each $property, $value in $declarations {
        @each $prefix in $prefixes {
            #{"-" + $prefix + "-" + $property}: $value;
        }

        // Output standard non-prefixed declaration
        #{$property}: $value;
    }
}

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"));

    $formats: (otf: "opentype", ttf: "truetype");

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

// box-shadow

@mixin box-shadow($valores, $arg) {
    -webkit-box-shadow: $valores, $arg;
    -moz-box-shadow: $valores, $arg;
}
